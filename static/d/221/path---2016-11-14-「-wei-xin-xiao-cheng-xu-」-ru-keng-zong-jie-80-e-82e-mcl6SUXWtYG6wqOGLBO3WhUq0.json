{"data":{"markdownRemark":{"id":"9ac43d0b-d63d-52d8-b605-75a62a78de9e","frontmatter":{"title":"「微信小程序」入坑总结","date":"2016/11/14","tags":["JavaScript","Wechat"],"issueId":null},"excerpt":"前段时间去了广州参加了关于「微信小程序」的技术沙龙，整场下来收获颇多。实际上微信小程序刚刚发布出来的时候就关注，弄了破解了的开发工具，跑了个官方的 Demo。 听完回来之后就想着挖个相关的坑，正好看到手机上的 「ONE · 一个」。上网找到了 ONE 的接口，打算搞一个仿照 O…","html":"<p>前段时间去了广州参加了关于「微信小程序」的技术沙龙，整场下来收获颇多。实际上微信小程序刚刚发布出来的时候就关注，弄了破解了的开发工具，跑了个官方的 Demo。</p>\n<p>听完回来之后就想着挖个相关的坑，正好看到手机上的 「ONE · 一个」。上网找到了 ONE 的接口，打算搞一个仿照 ONE 官方 APP 的小程序，最后就有了 <a href=\"https://github.com/ahonn/weapp-one\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">weapp-one</a> 这个项目。</p>\n<h2 id=\"关于小程序\"><a href=\"#%E5%85%B3%E4%BA%8E%E5%B0%8F%E7%A8%8B%E5%BA%8F\" aria-label=\"关于小程序 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>关于小程序</h2>\n<p>微信小程序不是 Web 也不是 Native，尝试之后给我的感觉有点像是 weex。因为之前尝试 weex 的时候是下载一个 APP，然后通过应用内扫码来运行对应的应用。这一点上小程序类似。</p>\n<p>在沙龙上有位分享嘉宾有提到，小程序实际上是在 Webview 之上再加上一层原生的组件。例如底部的 tabbar 以及顶部的 navbar 就是原生的。还有小程序的 map 组件，是调用原生的 map 组件。</p>\n<!--more-->\n<h2 id=\"请求限制\"><a href=\"#%E8%AF%B7%E6%B1%82%E9%99%90%E5%88%B6\" aria-label=\"请求限制 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>请求限制</h2>\n<p>一开始就遇到了问题，ONE 官方的接口是 http 的，而且是 8000 这个端口。微信小程序对发送的请求有限制，必须是 https（在本地开发可以用 http），而且不能带端口号。</p>\n<p>所以我就使用了比较暴力的方法，把开发工具中对应用来限制的代码给注释掉了，反正只是用来体验一下小程序开发，所以就无所谓了。</p>\n<h2 id=\"添加页面\"><a href=\"#%E6%B7%BB%E5%8A%A0%E9%A1%B5%E9%9D%A2\" aria-label=\"添加页面 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>添加页面</h2>\n<p>在小程序中添加页面都需要将路径添加到 <code class=\"language-text\">app.json</code> 中的 <code class=\"language-text\">page</code> 项中，否则会找不到页面。与 Vue 类似，每个小程序页面包含 <code class=\"language-text\">page.js</code>，<code class=\"language-text\">page.wxml</code>，<code class=\"language-text\">page.wxss</code>，分别对应脚本，模板以及样式。</p>\n<p>还可以添加一个 <code class=\"language-text\">page.json</code> 对页面进行单独配置，比如配置 <code class=\"language-text\">navigationBarTitleText</code> 来改变导航上的文字显示，诸如此类的对页面的窗口表现配置。</p>\n<h2 id=\"奇怪的组件\"><a href=\"#%E5%A5%87%E6%80%AA%E7%9A%84%E7%BB%84%E4%BB%B6\" aria-label=\"奇怪的组件 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>奇怪的组件</h2>\n<p><strong>view、text</strong>\n在 wxml 里面写的是类似 HTML 的标签，标准的 HTML 标签是无法使用的。只能使用微信小程序官方的组件，组件对应有一些属性或事件可以调用。有类似于 <code class=\"language-text\">&lt;div&gt;</code> 的 <code class=\"language-text\">&lt;view&gt;</code> 组件，基本上页面上的组件都会被 <code class=\"language-text\">&lt;view&gt;</code> 包裹住。\n然后文字方面是使用 <code class=\"language-text\">&lt;text&gt;</code>，虽然直接显示文字也没什么问题。不过我还是把所有的文字都加上了 <code class=\"language-text\">&lt;text&gt;</code> 标签。</p>\n<p><strong>image</strong>\n说起组件，微信小程序里最让我不爽的就是 <code class=\"language-text\">&lt;image&gt;</code> 这个组件了。给这个组件一个图片地址之后，默认的样式不是图片的大小，而是固定的 300px * 225px。与 HTML 中的 <code class=\"language-text\">&lt;img&gt;</code> 完全不同，用起来有点不舒服。\n<code class=\"language-text\">&lt;image&gt;</code> 组件还提供了不同显示方式的 mode，不过用起来还是觉得怪怪的。</p>\n<p><strong>audio</strong>\n音频播放的话有 <code class=\"language-text\">&lt;audio&gt;</code> 这个组件，但是这个组件的样式好像是固定的，类似于在网页也加上网易云音乐的外链那样。不过幸好有音频播放相关的 api 可以用，这样就可以当用户触发某些操作的时候播放音频，即可实现播放按钮点击后播放音频。</p>\n<p>微信小程序在播放音频的时候，开发工具上会出现对应的音乐栏，可以对播放的音频进行播放/暂停。猜猜在真机上使用时，会在通知栏出现音频控制。上面会显示音频的作者以及歌曲名称。但是在实际使用中有一点比较尴尬，使用调用 api 的方式播放音频没有设置音频作者的选项。详情可以见 <a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/api/media-background-audio.html?t=20161107#wxplaybackgroundaudioobject\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">音乐播放控制 · 小程序</a></p>\n<p><strong>video</strong>\n相较与 HTML5 中的 <code class=\"language-text\">&lt;video&gt;</code> 标签，微信小程序中的 <code class=\"language-text\">&lt;video&gt;</code> 组件缺失了很多东西，例如 <code class=\"language-text\">loop</code> 与 <code class=\"language-text\">poster</code>。也就是说无法在用户点击播放按钮前显示特定的图像，只能是显示视频最开头。\n<code class=\"language-text\">&lt;video&gt;</code> 组件同样有默认的尺寸 300px * 225px，但没有 <code class=\"language-text\">&lt;image&gt;</code> 组件中的显示模式的设置。未全屏状态下，在不同的分辨率上，上下或者左右可能会存在黑边。</p>\n<h2 id=\"特殊的-rpx\"><a href=\"#%E7%89%B9%E6%AE%8A%E7%9A%84-rpx\" aria-label=\"特殊的 rpx permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>特殊的 rpx</h2>\n<p>微信小程序中有特有的一个尺寸单位 —— rpx，1rpx 表示屏幕宽度的 1/750 大小，也就是说，100% 宽度就是 750rpx。还有一个会被忽略的尺寸单位 —— rem，与 Web 中的 rem 不同，1rem 表示屏幕宽度的 1/20 大小。</p>\n<p>在高度上使用 rpx 的话，也会根据屏幕的宽度的大小而改变。我更倾向与宽度使用 rpx 而高度使用 rem，不过其实比较喜欢用 px 来写样式，这可能算是一个不好的习惯。</p>\n<h2 id=\"实现滑至最右切换页面\"><a href=\"#%E5%AE%9E%E7%8E%B0%E6%BB%91%E8%87%B3%E6%9C%80%E5%8F%B3%E5%88%87%E6%8D%A2%E9%A1%B5%E9%9D%A2\" aria-label=\"实现滑至最右切换页面 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实现滑至最右切换页面</h2>\n<p>在仿照 ONE 写微信小程序的时候遇到了一个问题，使用滑块视图组件 <code class=\"language-text\">&lt;swiper&gt;</code> 去显示每日图文，一共10个图文，当滑动至最右时切换到选择往期列表的页面。如下图所示：</p>\n<p><img src=\"//ouv0frko5.bkt.clouddn.com/3qpaf.jpg\" alt=\"One\"></p>\n<p>但是 <code class=\"language-text\">&lt;swiper&gt;</code> 组件并没有提供对应的事件，使用就自己实现了一个。主要是使用滑块视图每一次切换视图时都会触发一个 <code class=\"language-text\">bindchange</code> 事件，还有设置滑块视图显示位置的 <code class=\"language-text\">current</code> 属性。</p>\n<p>在 <code class=\"language-text\">&lt;swiper&gt;</code> 组件中添加一个空的 <code class=\"language-text\">&lt;swiper-item&gt;</code> 子组件，当滑动到这个空的子组件的时候使用 <code class=\"language-text\">wx.navigateTo</code> 这个 api 去切换到往期列表这个页面。同时将滑块视图的显示位置设置到倒数第二个，即最后一个非空的子组件。</p>\n<p>这样就实现了滑动至最右切换页面的功能，同时在点击返回的时候显示的也是滑块视图中的最后一个有内容的子组件。具体实现代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    current<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ......</span>\n  <span class=\"token comment\">// more code</span>\n  <span class=\"token function-variable function\">handleChange</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> current <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">.</span>current\n    <span class=\"token keyword\">let</span> length <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>vols<span class=\"token punctuation\">.</span>length\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>current <span class=\"token operator\">===</span> length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        current<span class=\"token punctuation\">:</span> length\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      wx<span class=\"token punctuation\">.</span><span class=\"token function\">navigateTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        url<span class=\"token punctuation\">:</span> <span class=\"token string\">'../history/history?page=index'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">success</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            current<span class=\"token punctuation\">:</span> length <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>这里使用了两次 <code class=\"language-text\">this.setData</code> 是因为在第二次执行上面的滑动切换页面再返回的时候，显示的子组件并不是最后一个非空的子组件，而是最后的那个空子组件。大概原因是因为第二次执行这个操作的时候，<code class=\"language-text\">current</code> 并没有更新。\n所以解决的方案是在每次修改 <code class=\"language-text\">current</code> 之前修改一次它的值，使得后面修改 <code class=\"language-text\">current</code> 值时会触发视图的更新。</p>","timeToRead":2}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"9ac43d0b-d63d-52d8-b605-75a62a78de9e"}}