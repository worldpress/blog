{"data":{"markdownRemark":{"id":"dc769985-918a-5820-9238-d83f9c0d3e3a","frontmatter":{"title":"Vim 折腾记","date":"2017/02/19","tags":["Vim"],"issueId":null},"excerpt":"昨天在微信读书上面看到了池建强的《MacTalk 人生元编程》，然后花了差不多一天看完，其中有篇有关于 Vim 的文章提起了我对这个编辑器的再一次兴趣（对的，我对它感兴趣很多次了，每次都懒..）。 一直懒得去慢慢配置它，又不想用别人的配置。自己用的编辑器还是想自己折腾，然后今天…","html":"<p>昨天在微信读书上面看到了池建强的《MacTalk 人生元编程》，然后花了差不多一天看完，其中有篇有关于 Vim 的文章提起了我对这个编辑器的再一次兴趣（对的，我对它感兴趣很多次了，每次都懒..）。</p>\n<p>一直懒得去慢慢配置它，又不想用别人的配置。自己用的编辑器还是想自己折腾，然后今天就趁着我对这个还有点热度赶紧折腾起来。</p>\n<h2 id=\"MacVim\"><a href=\"#MacVim\" aria-label=\"MacVim permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MacVim</h2>\n<p>其实在命令行里面直接写代码还有有些不习惯的，所以选了 MacVim 这个 GUI 版本。这样又可以与其他编辑器一样单独打开，想小改代码的时候又可以直接打开命令行搞。</p>\n<p>在 MacTalk 的文章里面有提到 Vim 中文版本的<a href=\"http://sourceforge.net/projects/vimcdoc/files/latest/download\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">帮助文档</a>，遂下载之。果然还是中文的比较浅显易懂。</p>\n<p>以前看别人的 <code class=\"language-text\">.vimrc</code> 配置，里面有些编辑器的基本配置，也不知道是哪里查的。原来这些配置可以在编辑器中输入 <code class=\"language-text\">:help options</code> 进行查看。</p>\n<!--more-->\n<h3 id=\"缩进\"><a href=\"#%E7%BC%A9%E8%BF%9B\" aria-label=\"缩进 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>缩进</h3>\n<p>关于缩进的配置，主要设置了 <code class=\"language-text\">autoindent</code>, <code class=\"language-text\">smartindent</code> 和 <code class=\"language-text\">expandtab</code> 这三个选项。</p>\n<ul>\n<li><code class=\"language-text\">autoindent</code> 选项根据上一行决定新行的缩进</li>\n<li><code class=\"language-text\">smartindent</code> 选项智能自动缩进</li>\n<li><code class=\"language-text\">expandtab</code> 选项将 tab 转换为空格</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">set autoindent\nset smartindent\nset expandtab</code></pre></div>\n<h3 id=\"行号\"><a href=\"#%E8%A1%8C%E5%8F%B7\" aria-label=\"行号 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>行号</h3>\n<p>显示行号是硬需求，但是与其他编辑器不同，在 vim 上还有相对行号。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">set number\nset relativenumber</code></pre></div>\n<h2 id=\"插件\"><a href=\"#%E6%8F%92%E4%BB%B6\" aria-label=\"插件 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>插件</h2>\n<p>显而易见，手动安装 vim 插件是很麻烦很麻烦的。与 sublime text 之类的类似，vim 同样有类似的插件管理器 <a href=\"https://github.com/VundleVim/Vundle.vim\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vundle</a>。</p>\n<p>创建文件夹 <code class=\"language-text\">~/.vim</code> 和配置文件 <code class=\"language-text\">~/.vimrc</code>，并安装 Vundle:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle</code></pre></div>\n<p>为了方便管理再新建一个 <code class=\"language-text\">.vimrc.bundles</code> 来单独存放插件列表：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">set nocompatible    &quot; be iMproved, required\nfiletype off        &quot; requried\nset rtp+=~/.vim/bundle/vundle/\n\ncall vundle#begin()\n\n&quot; Let Vundle manage Vundle\nBundle &#39;gmarik/vundle&#39;\n\n&quot; .... 其他插件\n\ncall vundle#end()\n&quot; required\nfiletype plugin indent on</code></pre></div>\n<p>以后添加插件的时候只需要在这个文件里面添加一行：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Bundle &#39;xxx&#39;</code></pre></div>\n<p>安装插件输入 <code class=\"language-text\">:BundleInstall</code> 命令即可，卸载插件时删除对应的配置并运行 <code class=\"language-text\">:BundleClean</code> 删除插件。</p>\n<h3 id=\"括号补全\"><a href=\"#%E6%8B%AC%E5%8F%B7%E8%A1%A5%E5%85%A8\" aria-label=\"括号补全 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>括号补全</h3>\n<p>第一次用的时候，输入 <code class=\"language-text\">(</code> 居然没有自己蹦出来另外一个 <code class=\"language-text\">)</code>。这不科学，讲道理这个是一定要的。</p>\n<p>发现很多人用的是 <a href=\"https://github.com/Raimondi/delimitMate\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">delimitMate</a> ，添加 <code class=\"language-text\">Bundle &#39;delimitMate&#39;</code> 到 <code class=\"language-text\">.vimrc.bundles</code>，运行 <code class=\"language-text\">BundleInstall</code>。</p>\n<p>安装完直接就可以自动补全括号了。</p>\n<h3 id=\"Emmet\"><a href=\"#Emmet\" aria-label=\"Emmet permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Emmet</h3>\n<p>很多浏览器都支持 Emmet 插件，vim 同样也有。但这个 Emmet 是第三方的，叫 <a href=\"https://github.com/mattn/emmet-vim/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Emmet.vim</a>。</p>\n<p>安装完之后主要是设置一下出发的快捷键，默认的快捷键是 <code class=\"language-text\">Ctrl + y</code>。\n我把快捷键修改成 <code class=\"language-text\">Ctrl + e</code> 比较顺手。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot; Emmet.vim\nlet g:user_emmet_expandabbr_key = &#39;&lt;c-e&gt;&#39;</code></pre></div>\n<h3 id=\"目录树\"><a href=\"#%E7%9B%AE%E5%BD%95%E6%A0%91\" aria-label=\"目录树 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>目录树</h3>\n<p>目录树就基本上也就是使用 <a href=\"https://github.com/scrooloose/nerdtree\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NERDTree</a>。</p>\n<p>开启目录树的快捷键修改为 <code class=\"language-text\">Ctrl + b</code>，然后当 vim 只剩目录树显示的时候自动退出。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot; NERDTree\nmap &lt;c-b&gt; :NERDTreeToggle&lt;CR&gt;\nautocmd vimenter * NERDTree\nautocmd bufenter * if (winnr(&quot;$&quot;) == 1 &amp;&amp; exists(&quot;b:NERDTreeType&quot;) &amp;&amp;b:NERDTreeType == &quot;primary&quot;) | q | endif</code></pre></div>\n<h3 id=\"代码补全\"><a href=\"#%E4%BB%A3%E7%A0%81%E8%A1%A5%E5%85%A8\" aria-label=\"代码补全 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代码补全</h3>\n<p>补全用的就是大名鼎鼎的 <a href=\"https://github.com/Valloric/YouCompleteMe\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">YouCompleteMe</a> 了。</p>\n<p>关于这个插件网上有很多插件，我就不啰嗦了。这里主要是抄的百度 EFE 的配置：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot; YouCompleteMe\n&quot; http://efe.baidu.com/blog/vim-javascript-completion/#youcompleteme\nlet g:ycm_min_num_of_chars_for_completion = 3\nlet g:ycm_autoclose_preview_window_after_completion=1\nlet g:ycm_complete_in_comments = 1\nlet g:ycm_key_list_select_completion = [&#39;&lt;c-n&gt;&#39;, &#39;&lt;Down&gt;&#39;]\nlet g:ycm_key_list_previous_completion = [&#39;&lt;c-p&gt;&#39;, &#39;&lt;Up&gt;&#39;]\n&quot; Use tab\nfunction! TabFunction ()\n    let line = getline(&#39;.&#39;)\n    let substr = strpart(line, -1, col(&#39;.&#39;)+1)\n    let substr = matchstr(substr, &quot;[^ \\t]*$&quot;)\n    if strlen(substr) == 0\n        return &quot;\\&lt;tab&gt;&quot;\n    endif\n    return pumvisible() ? &quot;\\&lt;c-n&gt;&quot; : &quot;\\&lt;c-x&gt;\\&lt;c-o&gt;&quot;\nendfunction\ninoremap &lt;tab&gt; &lt;c-r&gt;=TabFunction()&lt;cr&gt;\n\nlet g:ycm_semantic_triggers = {\n    \\   &#39;css&#39;: [ &#39;re!^\\s{2}&#39;, &#39;re!:\\s+&#39;],\n    \\   &#39;html&#39;: [ &#39;&lt;/&#39; ],\n    \\ }</code></pre></div>\n<h2 id=\"总结\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-label=\"总结 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h2>\n<p>折腾了一下午，终于算是搞定了。其实过程还是蛮好玩的，有机会还想写写插件玩玩。抛弃 VS Code，开始 Vim 之旅感。</p>","timeToRead":3}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"dc769985-918a-5820-9238-d83f9c0d3e3a","redirect":true,"redirectUrl":"/2017/02/19/zhē téng jì/"}}