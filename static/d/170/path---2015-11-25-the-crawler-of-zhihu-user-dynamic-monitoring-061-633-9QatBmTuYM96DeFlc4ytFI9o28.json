{"data":{"markdownRemark":{"id":"a0f02aa4-c6ac-577f-bea0-ad7a59bf1dc0","frontmatter":{"title":"知乎用户动态监控爬虫","date":"2015/11/25","tags":["Python","知乎"],"issueId":4},"fields":{"slug":"/2015/11/25/知乎用户动态监控爬虫/"},"excerpt":"根据极客学院的Python爬虫教程写的一个单线程简易爬虫。可以监控知乎用户动态，当有新动态时发送邮件通知。 步骤 根据要关注的知乎用户的主页URL，使用requests模块获取整个用户主页的html。 根据用户主页及其html代码，定位所需要的最新动态的位置。 使用正则表达式比…","html":"<blockquote>\n<p>根据极客学院的Python爬虫教程写的一个单线程简易爬虫。可以监控知乎用户动态，当有新动态时发送邮件通知。</p>\n</blockquote>\n<h4 id=\"步骤\"><a href=\"#%E6%AD%A5%E9%AA%A4\" aria-label=\"步骤 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>步骤</h4>\n<ul>\n<li>根据要关注的知乎用户的主页URL，使用requests模块获取整个用户主页的html。</li>\n<li>根据用户主页及其html代码，定位所需要的最新动态的位置。</li>\n<li>使用正则表达式比配到需要的数据。</li>\n<li>拼接数据，判断是否已经保持在文件中，即判断是否为新动态。</li>\n<li>若是新动态，使用python的smtplib模块发送收件到设置的邮箱中并保存到本地文件，否则略过。</li>\n</ul>\n<!--more-->\n<h4 id=\"模块\"><a href=\"#%E6%A8%A1%E5%9D%97\" aria-label=\"模块 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>模块</h4>\n<p><code class=\"language-text\">os</code>\n<code class=\"language-text\">time</code>\n<code class=\"language-text\">re</code>\n<code class=\"language-text\">sys</code>\n<code class=\"language-text\">MIMEText</code>\n<code class=\"language-text\">requests</code>\n<code class=\"language-text\">smtplib</code></p>\n<!--more-->\n<h4 id=\"zhihu类：获取与匹配，保持内容\"><a href=\"#zhihu%E7%B1%BB%EF%BC%9A%E8%8E%B7%E5%8F%96%E4%B8%8E%E5%8C%B9%E9%85%8D%EF%BC%8C%E4%BF%9D%E6%8C%81%E5%86%85%E5%AE%B9\" aria-label=\"zhihu类：获取与匹配，保持内容 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>zhihu类：获取与匹配，保持内容</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class zhihu(object):\n\n    def __init__(self):\n        # 设置关注的知乎用户\n        self.url = &quot;http://www.zhihu.com/people/xxxx&quot;\n        # 设置request header\n        self.header = {\n            &#39;Host&#39; : &#39;www.zhihu.com&#39;,\n            &#39;Connection&#39; : &#39;Keep-Alive&#39;,\n            &#39;Accept&#39; : &#39;text/html, application/xhtml+xml, image/jxr, */*&#39;,\n            &#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36&#39;,\n            &#39;Referer&#39;: self.url\n        }\n        # 设置登录的Cookie\n        self.cookie = {\n            &#39;Cookie&#39; : &#39;&#39;\n        }\n\n    # 获取知乎用户的主页HTML\n    def getHTML(self):\n        html = requests.get(self.url, headers = self.header, cookies = self.cookie).content\n        return html\n\n    # 获取最新动态\n    def getContent(self, html):\n        self.name = re.findall(&#39;&lt;span class=&quot;name&quot;&gt;(.*?)&lt;/span&gt;&#39;, html, re.S)[0]\n        content = re.findall(&#39;&lt;div class=&quot;zm-profile-section-main zm-profile-section-activity-main zm-profile-activity-page-item-main&quot;&gt;(.*?)&lt;/div&gt;&#39;, html, re.S)\n        return content\n\n    # 获取每一条最新动态\n    def getText(self, contents):\n        data = {}\n        data[&#39;href&#39;] = re.findall(&#39;href=&quot;/question/(.*?)&quot;&#39;, contents, re.S)\n        data[&#39;question&#39;] = re.findall(&#39;&lt;a class=&quot;question_link&quot; .*?&quot;&gt;(.*?)&lt;/a&gt;&#39;, contents, re.S)\n        restr = &#39;&quot;&gt;&#39;+ self.name +&#39;&lt;/a&gt;(.*?)\\n\\n&lt;a&#39;\n        data[&#39;action&#39;] = re.findall(restr, contents, re.S)\n        text = self.name + data[&#39;action&#39;] + &#39;: &#39; +  data[&#39;question&#39;] + &#39; http://www.zhihu.com/question/&#39;+ data[&#39;href&#39;] + &#39;\\n&#39;\n        return text\n\n    # 保存到文本\n    def toSave(self, text):\n        f = open(&#39;zhihu.txt&#39;, &#39;a&#39;)\n        f.write(text)\n        f.close()\n\n    # 检查动态是否已记录\n    def toCheck(self, text):\n        f = open(&#39;zhihu.txt&#39;, &#39;r&#39;)\n        existzhihu = f.readlines()\n        if text in existzhihu:\n            return False\n        else:\n            return True</code></pre></div>\n<h4 id=\"mail类：发送邮件\"><a href=\"#mail%E7%B1%BB%EF%BC%9A%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6\" aria-label=\"mail类：发送邮件 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>mail类：发送邮件</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class mail(object):\n\n    def __init__(self):\n        #邮件服务器地址，需要打开smtp\n        self.mail_host = &quot;smtp.xxx.cn&quot;\n        #邮件账号\n        self.mail_user = &quot;&quot;\n        #邮箱密码\n        self.mail_pass = &quot;&quot;\n        #邮箱后缀\n        self.mail_postfix = &quot;xxx.com&quot;\n\n    def sendMail(self, toList, sub, content):\n        #发信人\n        me = &quot;zhihu spider&quot; + &quot;&lt;&quot; + self.mail_user + &quot;@&quot; + self.mail_postfix + &quot;&gt;&quot;\n        msg = MIMEText(content, _subtype=&#39;plain&#39;, _charset=&#39;utf-8&#39;)\n         #邮件标题\n        msg[&#39;Subject&#39;] = sub\n        #邮件发送人\n        msg[&#39;From&#39;] = me\n        #邮件收件人\n        msg[&#39;To&#39;] = &quot;;&quot;.join(toList)\n        try:\n            server = smtplib.SMTP()\n            #连接服务器\n            server.connect(self.mail_host)\n            #登录邮箱\n            server.login(self.mail_user,self.mail_pass)\n            #发送邮件\n            server.sendmail(me, toList, msg.as_string())\n            server.close()\n            return True\n        except Exception, e:\n            print str(e)\n            return False</code></pre></div>\n<h4 id=\"运行\"><a href=\"#%E8%BF%90%E8%A1%8C\" aria-label=\"运行 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>运行</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">if __name__ == &#39;__main__&#39;:\n    # 设置收件人邮箱\n    mailToList = [&#39;xxx@xxx.com&#39;]\n    zhihu = zhihu();\n    while True:\n        html = zhihu.getHTML()\n        content = zhihu.getContent(html)\n        # 若没有动态记录，爬取所有动态，并保存\n        if not os.path.exists(&#39;zhihu.txt&#39;):\n            for contents in content:\n                text = zhihu.getText(contents)\n                zhihu.toSave(text)\n        else:\n            text = zhihu.getText(content[0])\n            print text\n            # 检查是否存在记录， 不存在则发送邮件，并保存到文件\n            if zhihu.toCheck(text):\n                if mail().sendMail(mailToList, &quot;知乎动态&quot;, text):\n                    zhihu.toSave(text)\n                    print &quot;发生成功&quot;\n                else:\n                    print &quot;发送失败&quot;\n            else:\n                print &quot;pass&quot;\n            # 每隔2分钟运行一次，检查新动态\n            time.sleep(120)</code></pre></div>\n<h4 id=\"总结\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-label=\"总结 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h4>\n<p>这个简单的爬虫目前还没有办法同时关注很多用户，然后对ip也没有进行代理，爬取过于频繁的话可能会被封ip而爬取不到。</p>\n<p>在爬取知乎的过程中发现如果没有header,可能返回的html页面不是用户的主页。然后如果没有登录的话，看到的知乎用户的主页刷新缓慢。需要模拟登录后才能够实时刷新出新动态。</p>\n<p>同时使用的是re库正则匹配内容，在使用上不是很方便。但是对xpath又不是很熟，所以暂时使用正则取匹配。</p>\n<p>之前还有看到一个解析html内容的模块叫BeautifulSoup，准备去学习学习。然后打算下次使用pythopn的爬虫框架Scrapy来写更多功能的知乎爬虫。</p>","timeToRead":3}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"a0f02aa4-c6ac-577f-bea0-ad7a59bf1dc0","redirect":true,"redirectUrl":"/2015/11/25/知乎用户动态监控爬虫/"}}