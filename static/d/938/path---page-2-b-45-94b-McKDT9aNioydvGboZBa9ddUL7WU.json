{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"b4d46727-4c04-520d-825b-6eac6ba745c3","frontmatter":{"title":"Redux 源码解析","date":"2017/07/04","tags":["Redux","React"]},"excerpt":"三大原则 单一数据源（store） state 只可读（只能通过 Reducer 生成新 State） 使用纯函数执行修改（Reducer 必须为纯函数，无副作用） 单向数据流  触发 action 传递数据，但应该尽量减少传递的数据 如果有 middleware，在 acti…","timeToRead":4}},{"node":{"id":"ccdc96a5-67f1-50f4-b6bd-11a36ed595f3","frontmatter":{"title":"Vim 全局搜索插件：ctrlsf.vim","date":"2017/06/29","tags":["Vim"]},"excerpt":"这两天一直在看文档看源码，Vim 上用的 Ack.vim 做全局搜索，但是用起来蛮难用的。 经过一番搜索，找到了国人写的全局搜索的插件：ctrlsf.vim，经过配置之后用了起来，感觉蛮好用的。 具体效果可以查看  ctrlsf.vim 安装 ctrlsf 是依赖 ack/ag…","timeToRead":1}},{"node":{"id":"1021b875-e756-530e-8bb7-58fb7d882eda","frontmatter":{"title":"React 初始化渲染","date":"2017/06/08","tags":["React","从零开始"]},"excerpt":"该文章将阅读 React 初始化渲染相关的代码，并实现一个简单的将 JSX 渲染到页面的功能。（不包括组件生命周期与事件处理相关部分） 源码解析：渲染过程 JSX 解析 我们知道在 React 组件  返回的是 JSX，而 JSX 将会被 babel 转换。JSX 将被转换为 …","timeToRead":9}},{"node":{"id":"05c4be5e-8a9b-5842-ab99-a8b2508fe929","frontmatter":{"title":"Koa2 源码分析","date":"2017/05/17","tags":["Koa","Node.js"]},"excerpt":"源码结构 Koa 的源码中主要为   目录下的  、 、  与   文件 application.js : 框架入口，导出 Application 类，即使用时导入的 Koa 类 context.js : context 对象的原型，代理 request 与 response …","timeToRead":7}},{"node":{"id":"2153af81-265d-56b5-bd4a-a821d183941b","frontmatter":{"title":"转投 Neovim","date":"2017/03/27","tags":["Vim"]},"excerpt":"很久之前就听说过 Neovim，但一直没有怎么了解过。昨天下午折腾了一下，彻底转投 Neovim 了。 虽然说这两货的差别目前还不是很大，但是 Neovim 实现了嵌入式终端模拟器，Excited! 各种 REPL 插件统统都可以卸载了！ 迁移配置文件 Neovim 配置完全兼…","timeToRead":1}},{"node":{"id":"a3314d77-e1ee-5022-b020-c2f101affd77","frontmatter":{"title":"阿里巴巴暑假实习面试总结","date":"2017/03/16","tags":["前端","面试","实习"]},"excerpt":"2月末的时候，通过  simplyY  内推了阿里巴巴暑期实习的前端开发岗，在此表示感谢。\n接着3月1号收到了内推的通知邮件，完善信息后很快就接到了一面的电话（3月3号）。 一面 面试了大概20分钟左右，整体内容还是比较偏基础。一开始是正常流程的自我介绍，说是三分钟自我介绍，但…","timeToRead":5}},{"node":{"id":"e9d85504-81db-5ec6-bddc-f0dfbf6986a6","frontmatter":{"title":"答前端面试题","date":"2017/03/11","tags":["前端","面试"]},"excerpt":"答  中级前端工程师面试 我想问的几个问题  中的几个问题，感谢  @SimplyY\n 我最大的优势以及为什么选择前端 我最大的优势是自学能力与理解能力强，并且不给自己套上『我是前端程序员』的枷锁，对于所有技术保持好奇心，不畏惧舒适圈外的事物并敢于尝试。 选择前端的理由是，前端…","timeToRead":2}},{"node":{"id":"aa41d3b3-d776-5561-bca7-e5641c376dd6","frontmatter":{"title":"XMLHttpRequest 学习笔记","date":"2017/03/02","tags":["JavaScript","前端"]},"excerpt":"AJAX即“Asynchronous JavaScript and XML”（异步的JavaScript与XML技术），指的是一套综合了多项技术的浏览器端网页开发技术。 Ajax 技术的核心是   对象，起初 IE 首先引入这个特性，后面其他浏览器供应商也提供了相同的实现。 X…","timeToRead":1}},{"node":{"id":"dc769985-918a-5820-9238-d83f9c0d3e3a","frontmatter":{"title":"Vim 折腾记","date":"2017/02/19","tags":["Vim"]},"excerpt":"昨天在微信读书上面看到了池建强的《MacTalk 人生元编程》，然后花了差不多一天看完，其中有篇有关于 Vim 的文章提起了我对这个编辑器的再一次兴趣（对的，我对它感兴趣很多次了，每次都懒..）。 一直懒得去慢慢配置它，又不想用别人的配置。自己用的编辑器还是想自己折腾，然后今天…","timeToRead":3}},{"node":{"id":"5bdc1554-eaa4-57db-8871-4cf02d6a5af3","frontmatter":{"title":"JavaScript 继承的那些事","date":"2017/01/24","tags":["JavaScript","前端"]},"excerpt":"众所周知，JavaScript 的继承是实现继承，而没有 Java 中的接口继承。这是因为 JavaScript 中函数没有签名，而实现继承依靠的是原型链来实现的。 原型链继承 JavaScript 中通过修改对象原型指向的对象来实现继承，即是将一个对象的原型指向要继承的对象实…","timeToRead":2}},{"node":{"id":"bd6c1bb5-bd1f-5e48-becc-6b4c2c3333bd","frontmatter":{"title":"从零开始制作 Hexo 主题","date":"2016/12/15","tags":["Hexo","前端","从零开始"]},"excerpt":"写在前面 本文将会从零开始开发一个简单的博客主题。样式主要参考  Hexo theme  中的  Noise  主题。 开始之前你需要了解： 模板引擎 CSS预处理器 Hexo 文档 本文使用的模板引擎为  ejs ，使用的 CSS 预处理器为  stylus 。这也是 hex…","timeToRead":10}},{"node":{"id":"d8aee0e5-e288-5bc5-9239-29056de40d5f","frontmatter":{"title":"2016 年终总结","date":"2016/12/13","tags":["年终总结"]},"excerpt":"一转眼 2016 年就快要结束了，这一年对自己来说收获了很多。 去年的总结，给自己定下了个 2016 年的计划。现在 2016 也差不多快结束了，我对自己执行的情况还是比较满意的。 关于 Github 去年年底参加了 Github 上的一个编程马拉松，一开始 commit 都是…","timeToRead":1}},{"node":{"id":"6900951b-bab7-5c8c-99d6-144da2581689","frontmatter":{"title":"JavaScript 创建对象的一些姿势","date":"2016/11/30","tags":["JavaScript","前端"]},"excerpt":"工厂模式 在函数中创建 Object 对象，并为对象添加属性。函数返回添加属性之后的对象。 但工厂模式产生的对象依旧为 Object 类型，只是在对象上添加了一些属性。 工厂模式虽然解决了创建多个相似对象的问题，但却没有解决对象识别的问题（即怎样知道一个对象的类型） 构造函数模…","timeToRead":2}},{"node":{"id":"8df6ee23-bc5c-5403-9fef-1c190c4e55fa","frontmatter":{"title":"JavaScript 数据类型判断","date":"2016/11/21","tags":["JavaScript","前端"]},"excerpt":"最近开始读之前没有读完的 underscore 的源码，刚把 Object 部分读完。对 JavaScript 中类型判断部分的总结。 Object.prototype.toString() 在进行类型判断时，使用到最多的当属  。  方法返回一个代表该对象的字符串。每个对象都…","timeToRead":2}},{"node":{"id":"9ac43d0b-d63d-52d8-b605-75a62a78de9e","frontmatter":{"title":"「微信小程序」入坑总结","date":"2016/11/14","tags":["JavaScript","Wechat"]},"excerpt":"前段时间去了广州参加了关于「微信小程序」的技术沙龙，整场下来收获颇多。实际上微信小程序刚刚发布出来的时候就关注，弄了破解了的开发工具，跑了个官方的 Demo。 听完回来之后就想着挖个相关的坑，正好看到手机上的 「ONE · 一个」。上网找到了 ONE 的接口，打算搞一个仿照 O…","timeToRead":2}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"page":2,"skip":15,"limit":15,"total":58}}