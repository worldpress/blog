{"data":{"markdownRemark":{"id":"df442a04-7710-54ae-880f-0b8ff4953a5c","frontmatter":{"title":"PHP cURL 库的简单使用","date":"2015/12/19","tags":["PHP"],"issueId":5},"excerpt":"之前写 PHP 的爬虫的时候就有用到 cURl 扩展，然后前几天在写   的时候也用到了这个，也觉得这个也是用得比较多的一个东西，所以就上网又学习了一下，就顺手把它写下来了。 cURL 是一个功能强大的库，支持很多不同的协议、选项，能提供 URL 请求相关的各种细节信息。常用于…","html":"<blockquote>\n<p>之前写 PHP 的爬虫的时候就有用到 cURl 扩展，然后前几天在写 <code class=\"language-text\">zhihu-php</code> 的时候也用到了这个，也觉得这个也是用得比较多的一个东西，所以就上网又学习了一下，就顺手把它写下来了。</p>\n</blockquote>\n<p>cURL 是一个功能强大的库，支持很多不同的协议、选项，能提供 URL 请求相关的各种细节信息。常用于网页、数据采集。</p>\n<h2 id=\"安装\"><a href=\"#%E5%AE%89%E8%A3%85\" aria-label=\"安装 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安装</h2>\n<p>可以通过 <code class=\"language-text\">phpinfo()</code> 来输出 PHP 的配置信息，搜索查看是否开启了 cURL 库。</p>\n<p><strong>windows</strong></p>\n<ul>\n<li>将 PHP 安装文件夹下的 <code class=\"language-text\">php_curl.dll</code>，<code class=\"language-text\">libeay32.dll</code>，<code class=\"language-text\">ssleay.dll</code> 复制到 <code class=\"language-text\">system32</code> 文件夹下。</li>\n<li>将 PHP.ini 中的 <code class=\"language-text\">extension=php_curl.dll</code> 前的 <code class=\"language-text\">;</code> 分号去掉。</li>\n<li>\n<p>重启服务器。</p>\n<!--more-->\n</li>\n</ul>\n<p><strong>linux</strong>\nUbuntu 上通过 <code class=\"language-text\">apt-get</code> 安装的 PHP 默认已经启用。若无，具体安装过程Google。</p>\n<h2 id=\"基本使用\"><a href=\"#%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\" aria-label=\"基本使用 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>基本使用</h2>\n<p>通过 <code class=\"language-text\">curl_init()</code> 初始化一个 cURL 对象，然后通过 <code class=\"language-text\">curl_setopt()</code> 设置传输的选项，使用 <code class=\"language-text\">curl_exec()</code> 执行该 cURL 会话，最后通过 <code class=\"language-text\">curl_close()</code> 关闭这个会话</p>\n<p><strong>简单的抓取网页</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$url</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'http://www.ahonn.me'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 初始化一个 cURL 会话</span>\n<span class=\"token variable\">$ch</span>  <span class=\"token operator\">=</span> <span class=\"token function\">curl_init</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 设置传输选项，这里设置的是返回的数据不直接输出</span>\n<span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_RETURNTRANSFER</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 执行该会话，并保存到 $content</span>\n<span class=\"token variable\">$content</span> <span class=\"token operator\">=</span> <span class=\"token function\">curl_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 关闭该会话</span>\n<span class=\"token function\">curl_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 输出抓取的网页</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p><strong>使用post方式</strong>\n通过 <code class=\"language-text\">get</code> 方式获取时，可以直接在 <code class=\"language-text\">$url</code> 中直接写入。而当需要使用 <code class=\"language-text\">post</code> 方式获取数据时，需要通过以下设置来开启 post 并设置 post 的数据。</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// 开启 post</span>\n<span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_POST</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 设置 post 的数据</span>\n<span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_POSTFIELDS</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>其中的 <code class=\"language-text\">$data</code> 即是需要 post 的数据。</p>\n<p><strong>设置header</strong>\n有些网页需要在请求中包含头信息，否则将抓取不到你需要的信息，那么可以通过下面的代码来设置：</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// 头信息数组</span>\n<span class=\"token variable\">$header</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token double-quoted-string string\">\"Host: www.ahonn.me\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token double-quoted-string string\">\"Accept: text/html, application/xhtml+xml, image/jxr, */*\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token double-quoted-string string\">\"User-Agent: Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\"</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 设置header</span>\n<span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_HTTPHEADER</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$header</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>设置头信息可以通过数组的形式，然后通过设置 <code class=\"language-text\">CURLOPT_HTTPHEADER</code> 来加入头信息。也可以单个去设置，例如</p>\n<ul>\n<li><code class=\"language-text\">CURLOPT_USERAGENT</code>：设置 User-Agent</li>\n<li><code class=\"language-text\">CURLOPT_REFERER</code>：设置 Referer</li>\n</ul>\n<p>等等</p>\n<p><strong>设置cookie</strong>\n有些网页需要登录后才可以抓取到，这时候就需要使用 cookie 来模拟登录。设置 cookie 可以在上面的 $header 数组中与头信息设置相同的方法来将 cookie 加入。也可以使用下面的 <code class=\"language-text\">curl_setpot</code> 选项来设置：</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">\t<span class=\"token comment\">// 设置 cookie，$cookie 是一个字符串</span>\n\t<span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_COOKIE</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$cookie</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>也可以通过文件的形式将 cookie 写入：</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">\t<span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_COOKIEFILE</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$cookiefile</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>禁用SSL验证</strong>\n有时候在抓取 Https 链接的时候以正常的方式去抓取会报错，此时需要在 cURL 会话中设置:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_SSL_VERIFYPEER</span><span class=\"token punctuation\">,</span> <span class=\"token boolean constant\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_SSL_VERIFYHOST</span><span class=\"token punctuation\">,</span> <span class=\"token boolean constant\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>通过上面的设置，可以禁用SSL证书的验证。</p>\n<p>以上即是目前我已经简单使用过的 cURL 库的内容，cURL 库还可以实现多线程抓取，实现 IP 代理等。其他内容会在之后的使用中学习到。</p>","timeToRead":2}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"df442a04-7710-54ae-880f-0b8ff4953a5c"}}