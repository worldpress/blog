{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"8df6ee23-bc5c-5403-9fef-1c190c4e55fa","frontmatter":{"title":"JavaScript 数据类型判断","date":"2016/11/21","tags":["JavaScript","前端"]},"excerpt":"最近开始读之前没有读完的 underscore 的源码，刚把 Object 部分读完。对 JavaScript 中类型判断部分的总结。 Object.prototype.toString() 在进行类型判断时，使用到最多的当属  。  方法返回一个代表该对象的字符串。每个对象都…","timeToRead":2}},{"node":{"id":"9ac43d0b-d63d-52d8-b605-75a62a78de9e","frontmatter":{"title":"「微信小程序」入坑总结","date":"2016/11/14","tags":["JavaScript","Wechat"]},"excerpt":"前段时间去了广州参加了关于「微信小程序」的技术沙龙，整场下来收获颇多。实际上微信小程序刚刚发布出来的时候就关注，弄了破解了的开发工具，跑了个官方的 Demo。 听完回来之后就想着挖个相关的坑，正好看到手机上的 「ONE · 一个」。上网找到了 ONE 的接口，打算搞一个仿照 O…","timeToRead":2}},{"node":{"id":"23928e73-7e20-5e0c-a3ff-18a233730775","frontmatter":{"title":"React 路由跳转后回到页面顶部","date":"2016/10/11","tags":["React","前端","JavaScript"]},"excerpt":"在 React 组件间进行页面跳转后，发现页面的位置并不在页面顶部，而是在页面跳转前的位置。就是说浏览器的滚动条并没有回到顶部的位置。 经过搜索之后找到了解决方案： Scroll to the top of the page after render in react.js 可…","timeToRead":1}},{"node":{"id":"0fb22df8-02b0-5f56-8f24-4c5948dadd05","frontmatter":{"title":"React 生命周期函数小结","date":"2016/10/02","tags":["JavaScript","前端","React"]},"excerpt":"生命周期函数是指，在组件生命周期上的特定点上执行的各个函数。\nReact 的组件声明周期函数分为三种：挂载，更新以及卸载。 挂载 组件挂载的生命周期函数都在初始化渲染前后被调用。 componentWillMount 只调用一次，在客户端与服务端都执行。在初始化渲染之前被调用。…","timeToRead":1}},{"node":{"id":"9838f9e1-d4fc-5c78-8804-daead40db6ef","frontmatter":{"title":"正则表达式备忘录","date":"2016/09/13","tags":["JavaScript","前端","RegExp"]},"excerpt":"JavaScript 创建正则表达式有两种方式： 使用正则表达式字面量： 调用 RegExp 对象的构造函数： 什么时候使用构造函数？ 当正则表达式的模式会变发生改变，或者需要从其他地方得到时（例如用户输入），适合使用构造函数的方式。 匹配字符表 ：将其后的特殊字符转义为字面量…","timeToRead":1}},{"node":{"id":"04aed588-7516-5718-b1dd-d8d54f70248c","frontmatter":{"title":"JavaScript 最佳实践","date":"2016/08/31","tags":["JavaScript","前端"]},"excerpt":"翻译自： JavaScript Best Practices: Tips & Tricks to Level Up Your Code \n没有严格的按照原文翻译，删减修改了部分内容。 在这个教程中，会列出一些重要的 JavaScript 的最佳实践，学习这些并不会很困难。 避免…","timeToRead":3}},{"node":{"id":"ddd66b81-277d-5cfc-a631-40c39ed9a40f","frontmatter":{"title":"如何减少浏览器回流","date":"2016/08/02","tags":["JavaScript","前端"]},"excerpt":"什么是浏览器回流 浏览器在显示网页时，需要计算每一个元素应该放置的位置，这个计算过程就称为浏览器回流（browser reflow）。回流会重新计算页面的布局，在回流中会重新计算元素的尺寸与位置，并且也会触发对子元素的回流。 触发浏览器回流的操作： 在 DOM 中插入，移除或者…","timeToRead":2}},{"node":{"id":"a7386d49-d9ab-5164-acbe-9570234e84af","frontmatter":{"title":"数组乱序的正确姿势","date":"2016/07/25","tags":["JavaScript","前端","Underscore"]},"excerpt":"在   中有一个函数，其作用是将数组乱序排序，实现如下： 其中使用的数组乱序的算法是  Fisher–Yates shuffle 。这是一个 O(n) 复杂度的随机排列数组元素的经典算法。 每次循环从前面的   个元素中随机选择一个元素  。将这个元素与第   个元素进行交换，…","timeToRead":1}},{"node":{"id":"d2d1aa14-2094-5253-931a-ccb68f791df7","frontmatter":{"title":"Vue 中使用 highlight.js","date":"2016/07/13","tags":["Vue","前端"]},"excerpt":"今天遇到一个问题：在使用 vue 的练手项目中，渲染的 HTML 里   标签中的代码没有代码高亮。 遂想到用 highlight.js 来解决，按照平常那样在 HTML 文件中引入   和   文件，然后在  中加上一句  。但是却没有效果。 在 Vue.js 的论坛上找到了…","timeToRead":1}},{"node":{"id":"45018382-86c1-5927-8b85-3734893e3587","frontmatter":{"title":"CSS 实现垂直居中","date":"2016/06/29","tags":["CSS","前端"]},"excerpt":"我们有这样一个结构的 HTML： 如果我们要实现   在   中垂直居中。 通常第一印象会想起给父元素设置相对定位，给子元素设置绝对定位。这样子元素就相对于父元素定位，再通过   与   各偏移 50% 父元素宽度，使用   来修正子元素的位置。 通过这种方式可以使得子元素在父…","timeToRead":1}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"page":3,"skip":20,"limit":10,"total":50}}