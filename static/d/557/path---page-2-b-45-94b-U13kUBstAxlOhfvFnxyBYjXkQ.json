{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"74e39aee-e3d6-55ac-8677-a83f58ce0345","frontmatter":{"title":"Koa2 源码分析","date":"2017/05/17","tags":["Koa","Node.js"]},"excerpt":"源码结构 Koa 的源码中主要为   目录下的  、 、  与   文件 application.js : 框架入口，导出 Application 类，即使用时导入的 Koa 类 context.js : context 对象的原型，代理 request 与 response …","timeToRead":7}},{"node":{"id":"b5634de1-7299-56b8-a79b-71330d3d042a","frontmatter":{"title":"转投 Neovim","date":"2017/03/27","tags":["Vim"]},"excerpt":"很久之前就听说过 Neovim，但一直没有怎么了解过。昨天下午折腾了一下，彻底转投 Neovim 了。 虽然说这两货的差别目前还不是很大，但是 Neovim 实现了嵌入式终端模拟器，Excited! 各种 REPL 插件统统都可以卸载了！ 迁移配置文件 Neovim 配置完全兼…","timeToRead":1}},{"node":{"id":"b35954e7-ff1d-51b6-a981-baf36edfc8d3","frontmatter":{"title":"阿里巴巴暑假实习面试总结","date":"2017/03/16","tags":["前端","面试"]},"excerpt":"2月末的时候，通过  simplyY  内推了阿里巴巴暑期实习的前端开发岗，在此表示感谢。\n接着3月1号收到了内推的通知邮件，完善信息后很快就接到了一面的电话（3月3号）。 一面 面试了大概20分钟左右，整体内容还是比较偏基础。一开始是正常流程的自我介绍，说是三分钟自我介绍，但…","timeToRead":5}},{"node":{"id":"f9cbccc0-0b7d-55dc-bf3c-3fc90099762c","frontmatter":{"title":"答前端面试题","date":"2017/03/11","tags":["前端","面试"]},"excerpt":"答  中级前端工程师面试 我想问的几个问题  中的几个问题，感谢  @SimplyY\n 我最大的优势以及为什么选择前端 我最大的优势是自学能力与理解能力强，并且不给自己套上『我是前端程序员』的枷锁，对于所有技术保持好奇心，不畏惧舒适圈外的事物并敢于尝试。 选择前端的理由是，前端…","timeToRead":2}},{"node":{"id":"4033317b-bfa5-562c-9869-0f23771a91d2","frontmatter":{"title":"XMLHttpRequest 学习笔记","date":"2017/03/02","tags":["JavaScript","前端"]},"excerpt":"AJAX即“Asynchronous JavaScript and XML”（异步的JavaScript与XML技术），指的是一套综合了多项技术的浏览器端网页开发技术。 Ajax 技术的核心是   对象，起初 IE 首先引入这个特性，后面其他浏览器供应商也提供了相同的实现。 X…","timeToRead":1}},{"node":{"id":"562d54fe-04aa-5f5c-b982-995602ce9c2c","frontmatter":{"title":"Vim 折腾记","date":"2017/02/19","tags":["Vim"]},"excerpt":"昨天在微信读书上面看到了池建强的《MacTalk 人生元编程》，然后花了差不多一天看完，其中有篇有关于 Vim 的文章提起了我对这个编辑器的再一次兴趣（对的，我对它感兴趣很多次了，每次都懒..）。 一直懒得去慢慢配置它，又不想用别人的配置。自己用的编辑器还是想自己折腾，然后今天…","timeToRead":3}},{"node":{"id":"549c732d-864d-5bd0-9832-c73870cbd285","frontmatter":{"title":"JavaScript 继承的那些事","date":"2017/01/24","tags":["JavaScript","前端"]},"excerpt":"众所周知，JavaScript 的继承是实现继承，而没有 Java 中的接口继承。这是因为 JavaScript 中函数没有签名，而实现继承依靠的是原型链来实现的。 原型链继承 JavaScript 中通过修改对象原型指向的对象来实现继承，即是将一个对象的原型指向要继承的对象实…","timeToRead":2}},{"node":{"id":"e967b069-498e-5bde-a9e4-4dd8258dc68f","frontmatter":{"title":"从零开始制作 Hexo 主题","date":"2016/12/15","tags":["Hexo","前端"]},"excerpt":"写在前面 本文将会从零开始开发一个简单的博客主题。样式主要参考  Hexo theme  中的  Noise  主题。 开始之前你需要了解： 模板引擎 CSS预处理器 Hexo 文档 本文使用的模板引擎为  ejs ，使用的 CSS 预处理器为  stylus 。这也是 hex…","timeToRead":10}},{"node":{"id":"d428a7f7-648f-53d1-9cea-14c7d94de544","frontmatter":{"title":"2016 年终总结","date":"2016/12/13","tags":["年终总结"]},"excerpt":"一转眼 2016 年就快要结束了，这一年对自己来说收获了很多。 去年的总结，给自己定下了个 2016 年的计划。现在 2016 也差不多快结束了，我对自己执行的情况还是比较满意的。 关于 Github 去年年底参加了 Github 上的一个编程马拉松，一开始 commit 都是…","timeToRead":1}},{"node":{"id":"2729652a-ca30-5fe3-9457-29a18fc49f4b","frontmatter":{"title":"JavaScript 创建对象的一些姿势","date":"2016/11/30","tags":["JavaScript","前端"]},"excerpt":"工厂模式 在函数中创建 Object 对象，并为对象添加属性。函数返回添加属性之后的对象。 但工厂模式产生的对象依旧为 Object 类型，只是在对象上添加了一些属性。 工厂模式虽然解决了创建多个相似对象的问题，但却没有解决对象识别的问题（即怎样知道一个对象的类型） 构造函数模…","timeToRead":2}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"page":2,"skip":10,"limit":10,"total":50}}